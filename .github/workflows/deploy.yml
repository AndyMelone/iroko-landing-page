name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main # Déclenche le workflow lors d'un push sur la branche 'main'

env:
  # Toutes les variables d'environnement doivent être indentées sous 'env:'
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }} # L'ID de votre projet Google Cloud
  GCP_REGION: ${{ secrets.GCP_REGION }}         # La région choisie pour le déploiement
  GCP_SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }} # Le nom de votre service Cloud Run
  ARTIFACT_REGISTRY_REPO: iroko                  # Le nom du dépôt dans Artifact Registry
  SECRETS_BASE64: ${{ secrets.SECRETS_BASE64_DEV }} # Contenu base64-encodé de votre fichier .env
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }} # Email du compte de service pour l'exécution Cloud Run (optionnel)

  # Le nom complet de l'image Docker pour Artifact Registry
  IMAGE_FULL_NAME: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }}

jobs:
  # Le job 'deploy' doit être indenté sous 'jobs:'
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write" # Nécessaire pour l'authentification OIDC avec GCP

    # Le bloc 'steps' doit être indenté sous le job 'deploy'
    steps:
      # Chaque étape individuelle doit être indentée sous 'steps:'
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode Secrets and Create .env
        run: |
          echo "${{ env.SECRETS_BASE64 }}" | base64 --decode > .env
          echo "Generated .env file:"
          cat .env # Affiche le contenu du .env pour le débogage (à retirer en production si sensible)

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCP_REGION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_FULL_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.GCP_SERVICE_NAME }}
          image: ${{ env.IMAGE_FULL_NAME }}
          region: ${{ env.GCP_REGION }}
          allow_unauthenticated: true
          port: 3000
          timeout: 3600
          labels: |
            commit-sha=${{ github.sha }}
          # Décommentez la ligne ci-dessous si vous souhaitez spécifier un compte de service
          # pour l'exécution de votre application Cloud Run (différent de celui utilisé pour le déploiement)
          # service_account_email: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Show Cloud Run URL
        run: echo "Cloud Run service URL: ${{ steps.deploy.outputs.url }}"
