name: BUILD AND DEPLOY IROKO LANDING PAGE

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  GCP_SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}
  ARTIFACT_REGISTRY_REPO: iroko
  SECRETS_BASE64: ${{ secrets.SECRETS_BASE64_DEV }}
  SERVICE_ACCOUNT_EMAIL: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Decode Secrets and Create .env
        run: |
          echo "${{ env.SECRETS_BASE64 }}" | base64 --decode > .env
          echo "Generated .env file:"
          cat .env

      - name: Create service Account json
        run: |
          echo "Creating service account JSON file"
          echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > gcp_sa_key.json
          echo "Service account JSON file created"
          cat gcp_sa_key.json

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}
          export_environment_variables: true

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          install_components: "beta"

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }} .
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.GCP_SERVICE_NAME }} \
            --image gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ env.GCP_SERVICE_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.GCP_REGION }} \
            --allow-unauthenticated
